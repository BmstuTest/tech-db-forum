package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/bozaro/tech-db-forum/generated/models"
)

// NewPostCreateParams creates a new PostCreateParams object
// with the default values initialized.
func NewPostCreateParams() *PostCreateParams {
	var (
		parentDefault = int64(0)
	)
	return &PostCreateParams{
		Parent: &parentDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewPostCreateParamsWithTimeout creates a new PostCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostCreateParamsWithTimeout(timeout time.Duration) *PostCreateParams {
	var (
		parentDefault = int64(0)
	)
	return &PostCreateParams{
		Parent: &parentDefault,

		timeout: timeout,
	}
}

// NewPostCreateParamsWithContext creates a new PostCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostCreateParamsWithContext(ctx context.Context) *PostCreateParams {
	var (
		parentDefault = int64(0)
	)
	return &PostCreateParams{
		Parent: &parentDefault,

		Context: ctx,
	}
}

// NewPostCreateParamsWithHTTPClient creates a new PostCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostCreateParamsWithHTTPClient(client *http.Client) *PostCreateParams {
	var (
		parentDefault = int64(0)
	)
	return &PostCreateParams{
		Parent:     &parentDefault,
		HTTPClient: client,
	}
}

/*PostCreateParams contains all the parameters to send to the API endpoint
for the post create operation typically these are written to a http.Request
*/
type PostCreateParams struct {

	/*Parent
	  Идентификатор родительского поста.

	*/
	Parent *int64
	/*Post
	  Данные поста.

	*/
	Post *models.Post
	/*SlugOrID
	  Идентификатор ветки обсуждения.

	*/
	SlugOrID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post create params
func (o *PostCreateParams) WithTimeout(timeout time.Duration) *PostCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post create params
func (o *PostCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post create params
func (o *PostCreateParams) WithContext(ctx context.Context) *PostCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post create params
func (o *PostCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post create params
func (o *PostCreateParams) WithHTTPClient(client *http.Client) *PostCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post create params
func (o *PostCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithParent adds the parent to the post create params
func (o *PostCreateParams) WithParent(parent *int64) *PostCreateParams {
	o.SetParent(parent)
	return o
}

// SetParent adds the parent to the post create params
func (o *PostCreateParams) SetParent(parent *int64) {
	o.Parent = parent
}

// WithPost adds the post to the post create params
func (o *PostCreateParams) WithPost(post *models.Post) *PostCreateParams {
	o.SetPost(post)
	return o
}

// SetPost adds the post to the post create params
func (o *PostCreateParams) SetPost(post *models.Post) {
	o.Post = post
}

// WithSlugOrID adds the slugOrID to the post create params
func (o *PostCreateParams) WithSlugOrID(slugOrID string) *PostCreateParams {
	o.SetSlugOrID(slugOrID)
	return o
}

// SetSlugOrID adds the slugOrId to the post create params
func (o *PostCreateParams) SetSlugOrID(slugOrID string) {
	o.SlugOrID = slugOrID
}

// WriteToRequest writes these params to a swagger request
func (o *PostCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	r.SetTimeout(o.timeout)
	var res []error

	if o.Parent != nil {

		// query param parent
		var qrParent int64
		if o.Parent != nil {
			qrParent = *o.Parent
		}
		qParent := swag.FormatInt64(qrParent)
		if qParent != "" {
			if err := r.SetQueryParam("parent", qParent); err != nil {
				return err
			}
		}

	}

	if o.Post == nil {
		o.Post = new(models.Post)
	}

	if err := r.SetBodyParam(o.Post); err != nil {
		return err
	}

	// path param slug_or_id
	if err := r.SetPathParam("slug_or_id", o.SlugOrID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
