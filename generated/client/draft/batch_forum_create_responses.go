package draft

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// BatchForumCreateReader is a Reader for the BatchForumCreate structure.
type BatchForumCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BatchForumCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBatchForumCreateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewBatchForumCreateConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBatchForumCreateOK creates a BatchForumCreateOK with default headers values
func NewBatchForumCreateOK() *BatchForumCreateOK {
	return &BatchForumCreateOK{}
}

/*BatchForumCreateOK handles this case with default header values.

Форумы созданы успешно.

*/
type BatchForumCreateOK struct {
	Payload []int32
}

func (o *BatchForumCreateOK) Error() string {
	return fmt.Sprintf("[POST /batch/forum/create][%d] batchForumCreateOK  %+v", 200, o.Payload)
}

func (o *BatchForumCreateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBatchForumCreateConflict creates a BatchForumCreateConflict with default headers values
func NewBatchForumCreateConflict() *BatchForumCreateConflict {
	return &BatchForumCreateConflict{}
}

/*BatchForumCreateConflict handles this case with default header values.

Хотя бы один форум уже присутсвует в базе данных.

*/
type BatchForumCreateConflict struct {
}

func (o *BatchForumCreateConflict) Error() string {
	return fmt.Sprintf("[POST /batch/forum/create][%d] batchForumCreateConflict ", 409)
}

func (o *BatchForumCreateConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
